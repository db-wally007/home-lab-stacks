
---

version: "3.6"

networks:
  docker_bridge:
    name: docker_bridge
    driver: bridge

volumes:
  prometheus_data: {}

services:
  homepage:  ## dashboard website
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=CET
    volumes:
      - /opt/containers/dashboard:/app/config
      - /run/podman/podman.sock:/var/run/docker.sock:ro
    ports:
      - 8585:3000/tcp
    restart: always
    networks:
      - docker_bridge

  docker_proxy: ## homepage docker integration helper
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    environment:
      - CONTAINERS=1 # Allow access to viewing containers
      - SERVICES=1 # Allow access to viewing services (necessary when using Docker Swarm)
      - TASKS=1 # Allow access to viewing tasks (necessary when using Docker Swarm)
      - POST=0 # Disallow any POST operations (effectively read-only)
    ports:
      - 127.0.0.1:2375:2375
    volumes:
      - /run/podman/podman.sock:/var/run/docker.sock:ro # Mounted as read-only
    restart: always
    networks:
      - docker_bridge

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - /opt/containers/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - 9090:9090/tcp
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-remote-write-receiver'
    restart: always
    networks:
      - docker_bridge

  grafana:
    image: grafana/grafana-enterprise:latest
    container_name: grafana
    restart: always
    user: "0:0"
    ports:
      - '8081:3000'
    networks:
      - docker_bridge
    volumes:
      - /opt/containers/grafana/data:/var/lib/grafana
    environment:
      - GF_SERVER_ROOT_URL=http://grafana
      - GF_SERVER_DOMAIN=homelab-cz.org
      - GF_SERVER_ENFORCE_DOMAIN=false
      - GR_SERVER_SERVE_FROM_SUB_PATH=true

  cloudflare_tunnel:
    container_name: tunnel
    image: cloudflare/cloudflared:latest
    restart: always
    command: tunnel run
    networks:
      - docker_bridge
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}

  nginx_proxy_manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginxproxymanager
    ports:
      - '443:443' # Public HTTPS Port
      - '80:80' # Public HTTP Port
      - '81:81' # Admin Web Port
    environment:
      DISABLE_IPV6: 'true'
    volumes:
      - /opt/containers/nginxproxymanager/data:/data
      - /opt/containers/nginxproxymanager/letsencrypt:/etc/letsencrypt
    networks:
      - docker_bridge
    restart: always

  podman_exporter:
    image: quay.io/navidys/prometheus-podman-exporter:latest
    container_name: podman-exporter
    environment:
      - CONTAINER_HOST=unix:///run/podman/podman.sock
    networks:
      - docker_bridge
    volumes:
      - /run/podman/podman.sock:/run/podman/podman.sock
    command: 
      - --collector.enhance-metrics
      - --collector.enable-all
    user: root
    ports:
      - 9882:9882
    security_opt:
      - label=disable
    restart: always

  grafana_alloy:
    container_name: grafana-alloy
    image: grafana/alloy:latest
    hostname: server
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/
    ports:
      - 12345:12345/tcp
    volumes:
      - /opt/containers/grafana-alloy/config/:/etc/alloy/
      - /sys:/hostfs/sys:ro
      - /proc:/hostfs/proc:ro
      - /run/udev:/hostfs/udev:ro
      - /:/rootfs:ro
      - /var/log/node_exporter:/var/log/node_exporter:ro
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket:ro
    restart: always
    network_mode: host
